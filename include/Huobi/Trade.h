#ifndef TRADE_H
#define TRADE_H

#include<string>
#include "Enums.h"
#include "Decimal.h"

namespace Huobi {

    /**
     * The trade information with price and amount etc.
     */
    struct Trade {
        /**
         * The unique trade id of this trade.
         */
        std::string tradeId;

        /**
         * The UNIX formatted timestamp generated by server in UTC.
         */
        long timestamp;

        /**
         * The trading price in quote currency.
         */
        Decimal price;

        /**
         * The trading volume in base currency.
         */
        Decimal amount;

        /**
         * The direction of the taker trade: 'buy' or 'sell'.
         */
        TradeDirection direction;

        Trade() {
        }

        Trade(com::huobi::gateway::ReqTrade::Tick tick) {

            tradeId = std::to_string(tick.trade_id());


            timestamp = TimeService::convertCSTInMillisecondToUTC(tick.ts());


            price = Decimal(tick.price().c_str());


            amount = Decimal(tick.volume().c_str());


            direction = tick.side() == com::huobi::gateway::Side::BUY ? TradeDirection::buy : TradeDirection::sell;

        }

        Trade(com::huobi::gateway::Trade trade) {

            tradeId = std::to_string(trade.trade_id());


            timestamp = TimeService::convertCSTInMillisecondToUTC(trade.ts());


            price = Decimal(trade.price().c_str());


            amount = Decimal(trade.volume().c_str());


            direction = trade.side() == com::huobi::gateway::Side::BUY ? TradeDirection::buy : TradeDirection::sell;
        }
    };
}
#endif /* TRADE_H */

