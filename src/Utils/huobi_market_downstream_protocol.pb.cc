// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huobi_market_downstream_protocol.proto

#include "huobi_market_downstream_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Depth_Tick;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Overview_Tick;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReqCandlestick_Tick;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReqTrade_Tick;
}  // namespace protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto
namespace HuobiProto {
class CandlestickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Candlestick>
      _instance;
} _Candlestick_default_instance_;
class ReqCandlestick_TickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCandlestick_Tick>
      _instance;
} _ReqCandlestick_Tick_default_instance_;
class ReqCandlestickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCandlestick>
      _instance;
} _ReqCandlestick_default_instance_;
class Depth_TickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Depth_Tick>
      _instance;
} _Depth_Tick_default_instance_;
class DepthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Depth>
      _instance;
} _Depth_default_instance_;
class AggrTradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggrTrade>
      _instance;
} _AggrTrade_default_instance_;
class TradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trade>
      _instance;
} _Trade_default_instance_;
class ReqTrade_TickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqTrade_Tick>
      _instance;
} _ReqTrade_Tick_default_instance_;
class ReqTradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqTrade>
      _instance;
} _ReqTrade_default_instance_;
class MarketSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarketSummary>
      _instance;
} _MarketSummary_default_instance_;
class Overview_TickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Overview_Tick>
      _instance;
} _Overview_Tick_default_instance_;
class OverviewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Overview>
      _instance;
} _Overview_default_instance_;
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result>
      _instance;
} _Result_default_instance_;
}  // namespace HuobiProto
namespace protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto {
static void InitDefaultsCandlestick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Candlestick_default_instance_;
    new (ptr) ::HuobiProto::Candlestick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Candlestick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Candlestick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCandlestick}, {}};

static void InitDefaultsReqCandlestick_Tick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_ReqCandlestick_Tick_default_instance_;
    new (ptr) ::HuobiProto::ReqCandlestick_Tick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::ReqCandlestick_Tick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqCandlestick_Tick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqCandlestick_Tick}, {}};

static void InitDefaultsReqCandlestick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_ReqCandlestick_default_instance_;
    new (ptr) ::HuobiProto::ReqCandlestick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::ReqCandlestick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReqCandlestick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReqCandlestick}, {
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqCandlestick_Tick.base,}};

static void InitDefaultsDepth_Tick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Depth_Tick_default_instance_;
    new (ptr) ::HuobiProto::Depth_Tick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Depth_Tick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Depth_Tick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDepth_Tick}, {}};

static void InitDefaultsDepth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Depth_default_instance_;
    new (ptr) ::HuobiProto::Depth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Depth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Depth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDepth}, {
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Depth_Tick.base,}};

static void InitDefaultsAggrTrade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_AggrTrade_default_instance_;
    new (ptr) ::HuobiProto::AggrTrade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::AggrTrade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AggrTrade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAggrTrade}, {}};

static void InitDefaultsTrade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Trade_default_instance_;
    new (ptr) ::HuobiProto::Trade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Trade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrade}, {}};

static void InitDefaultsReqTrade_Tick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_ReqTrade_Tick_default_instance_;
    new (ptr) ::HuobiProto::ReqTrade_Tick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::ReqTrade_Tick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqTrade_Tick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqTrade_Tick}, {}};

static void InitDefaultsReqTrade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_ReqTrade_default_instance_;
    new (ptr) ::HuobiProto::ReqTrade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::ReqTrade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReqTrade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReqTrade}, {
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqTrade_Tick.base,}};

static void InitDefaultsMarketSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_MarketSummary_default_instance_;
    new (ptr) ::HuobiProto::MarketSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::MarketSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MarketSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMarketSummary}, {}};

static void InitDefaultsOverview_Tick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Overview_Tick_default_instance_;
    new (ptr) ::HuobiProto::Overview_Tick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Overview_Tick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Overview_Tick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOverview_Tick}, {}};

static void InitDefaultsOverview() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Overview_default_instance_;
    new (ptr) ::HuobiProto::Overview();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Overview::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Overview =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOverview}, {
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Overview_Tick.base,}};

static void InitDefaultsPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Ping_default_instance_;
    new (ptr) ::HuobiProto::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing}, {}};

static void InitDefaultsResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HuobiProto::_Result_default_instance_;
    new (ptr) ::HuobiProto::Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HuobiProto::Result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Result =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResult}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Candlestick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqCandlestick_Tick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqCandlestick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Depth_Tick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Depth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AggrTrade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqTrade_Tick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqTrade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MarketSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Overview_Tick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Overview.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Result.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, num_of_trades_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Candlestick, symbol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick_Tick, num_of_trades_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqCandlestick, candlesticks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth_Tick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth_Tick, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth_Tick, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, asks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Depth, symbol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, first_trade_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, last_trade_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::AggrTrade, symbol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, trade_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Trade, symbol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, trade_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade_Tick, side_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::ReqTrade, trades_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::MarketSummary, num_of_trades_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview_Tick, num_of_trades_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Overview, tick_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Ping, ts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, ch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HuobiProto::Result, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::HuobiProto::Candlestick)},
  { 15, -1, sizeof(::HuobiProto::ReqCandlestick_Tick)},
  { 29, -1, sizeof(::HuobiProto::ReqCandlestick)},
  { 36, -1, sizeof(::HuobiProto::Depth_Tick)},
  { 43, -1, sizeof(::HuobiProto::Depth)},
  { 53, -1, sizeof(::HuobiProto::AggrTrade)},
  { 65, -1, sizeof(::HuobiProto::Trade)},
  { 76, -1, sizeof(::HuobiProto::ReqTrade_Tick)},
  { 86, -1, sizeof(::HuobiProto::ReqTrade)},
  { 93, -1, sizeof(::HuobiProto::MarketSummary)},
  { 108, -1, sizeof(::HuobiProto::Overview_Tick)},
  { 121, -1, sizeof(::HuobiProto::Overview)},
  { 128, -1, sizeof(::HuobiProto::Ping)},
  { 134, -1, sizeof(::HuobiProto::Result)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Candlestick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_ReqCandlestick_Tick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_ReqCandlestick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Depth_Tick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Depth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_AggrTrade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Trade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_ReqTrade_Tick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_ReqTrade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_MarketSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Overview_Tick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Overview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HuobiProto::_Result_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "huobi_market_downstream_protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&huobi_market_downstream_protocol.proto"
      "\022\nHuobiProto\032\031google/protobuf/any.proto\""
      "\246\001\n\013Candlestick\022\n\n\002ts\030\001 \001(\003\022\n\n\002id\030\002 \001(\003\022"
      "\014\n\004open\030\003 \001(\t\022\r\n\005close\030\004 \001(\t\022\013\n\003low\030\005 \001("
      "\t\022\014\n\004high\030\006 \001(\t\022\020\n\010turnover\030\007 \001(\t\022\016\n\006vol"
      "ume\030\010 \001(\t\022\025\n\rnum_of_trades\030\t \001(\005\022\016\n\006symb"
      "ol\030\n \001(\t\"\351\001\n\016ReqCandlestick\022\016\n\006symbol\030\001 "
      "\001(\t\0225\n\014candlesticks\030\002 \003(\0132\037.HuobiProto.R"
      "eqCandlestick.Tick\032\217\001\n\004Tick\022\n\n\002ts\030\001 \001(\003\022"
      "\n\n\002id\030\002 \001(\003\022\014\n\004open\030\003 \001(\t\022\r\n\005close\030\004 \001(\t"
      "\022\013\n\003low\030\005 \001(\t\022\014\n\004high\030\006 \001(\t\022\020\n\010turnover\030"
      "\007 \001(\t\022\016\n\006volume\030\010 \001(\t\022\025\n\rnum_of_trades\030\t"
      " \001(\005\"\374\001\n\005Depth\022\n\n\002ts\030\001 \001(\003\022$\n\004bids\030\002 \003(\013"
      "2\026.HuobiProto.Depth.Tick\022$\n\004asks\030\003 \003(\0132\026"
      ".HuobiProto.Depth.Tick\022\r\n\005delta\030\004 \001(\010\022\016\n"
      "\006symbol\030\005 \001(\t\032#\n\004Tick\022\r\n\005price\030\001 \001(\t\022\014\n\004"
      "size\030\002 \001(\t\"W\n\004Step\022\t\n\005STEP0\020\000\022\t\n\005STEP1\020\001"
      "\022\t\n\005STEP2\020\002\022\t\n\005STEP3\020\003\022\t\n\005STEP4\020\004\022\t\n\005STE"
      "P5\020\005\022\r\n\tPERCENT10\020\006\"\225\001\n\tAggrTrade\022\026\n\016fir"
      "st_trade_id\030\001 \001(\003\022\025\n\rlast_trade_id\030\002 \001(\003"
      "\022\n\n\002ts\030\003 \001(\003\022\r\n\005price\030\004 \001(\t\022\016\n\006volume\030\005 "
      "\001(\t\022\036\n\004side\030\006 \001(\0162\020.HuobiProto.Side\022\016\n\006s"
      "ymbol\030\007 \001(\t\"t\n\005Trade\022\020\n\010trade_id\030\001 \001(\003\022\n"
      "\n\002ts\030\002 \001(\003\022\r\n\005price\030\003 \001(\t\022\016\n\006volume\030\004 \001("
      "\t\022\036\n\004side\030\005 \001(\0162\020.HuobiProto.Side\022\016\n\006sym"
      "bol\030\006 \001(\t\"\252\001\n\010ReqTrade\022\016\n\006symbol\030\001 \001(\t\022)"
      "\n\006trades\030\002 \003(\0132\031.HuobiProto.ReqTrade.Tic"
      "k\032c\n\004Tick\022\020\n\010trade_id\030\001 \001(\003\022\n\n\002ts\030\002 \001(\003\022"
      "\r\n\005price\030\003 \001(\t\022\016\n\006volume\030\004 \001(\t\022\036\n\004side\030\005"
      " \001(\0162\020.HuobiProto.Side\"\250\001\n\rMarketSummary"
      "\022\016\n\006symbol\030\001 \001(\t\022\n\n\002ts\030\002 \001(\003\022\n\n\002id\030\003 \001(\003"
      "\022\014\n\004open\030\004 \001(\t\022\r\n\005close\030\005 \001(\t\022\013\n\003low\030\006 \001"
      "(\t\022\014\n\004high\030\007 \001(\t\022\020\n\010turnover\030\010 \001(\t\022\016\n\006vo"
      "lume\030\t \001(\t\022\025\n\rnum_of_trades\030\n \001(\005\"\311\001\n\010Ov"
      "erview\022\n\n\002ts\030\001 \001(\003\022\'\n\004tick\030\002 \003(\0132\031.Huobi"
      "Proto.Overview.Tick\032\207\001\n\004Tick\022\016\n\006symbol\030\001"
      " \001(\t\022\014\n\004open\030\002 \001(\t\022\r\n\005close\030\003 \001(\t\022\013\n\003low"
      "\030\004 \001(\t\022\014\n\004high\030\005 \001(\t\022\020\n\010turnover\030\006 \001(\t\022\016"
      "\n\006volume\030\007 \001(\t\022\025\n\rnum_of_trades\030\010 \001(\005\"\022\n"
      "\004Ping\022\n\n\002ts\030\001 \001(\003\"\215\001\n\006Result\022\014\n\004code\030\001 \001"
      "(\005\022\020\n\010sequence\030\002 \001(\003\022\"\n\006action\030\003 \001(\0162\022.H"
      "uobiProto.Action\022\n\n\002ch\030\004 \001(\t\022\017\n\007message\030"
      "\005 \001(\t\022\"\n\004data\030\017 \001(\0132\024.google.protobuf.An"
      "y*~\n\010Interval\022\t\n\005MIN_1\020\000\022\t\n\005MIN_5\020\001\022\n\n\006M"
      "IN_15\020\002\022\n\n\006MIN_30\020\003\022\n\n\006MIN_60\020\004\022\n\n\006HOUR_"
      "4\020\005\022\t\n\005DAY_1\020\006\022\n\n\006WEEK_1\020\007\022\t\n\005MON_1\020\010\022\n\n"
      "\006YEAR_1\020\t*\031\n\004Side\022\007\n\003BUY\020\000\022\010\n\004SELL\020\001*C\n\006"
      "Action\022\007\n\003SUB\020\000\022\007\n\003REQ\020\001\022\t\n\005UNSUB\020\002\022\010\n\004P"
      "USH\020\003\022\010\n\004PING\020\004\022\010\n\004PONG\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1953);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "huobi_market_downstream_protocol.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto
namespace HuobiProto {
const ::google::protobuf::EnumDescriptor* Depth_Step_descriptor() {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_enum_descriptors[0];
}
bool Depth_Step_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Depth_Step Depth::STEP0;
const Depth_Step Depth::STEP1;
const Depth_Step Depth::STEP2;
const Depth_Step Depth::STEP3;
const Depth_Step Depth::STEP4;
const Depth_Step Depth::STEP5;
const Depth_Step Depth::PERCENT10;
const Depth_Step Depth::Step_MIN;
const Depth_Step Depth::Step_MAX;
const int Depth::Step_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Interval_descriptor() {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_enum_descriptors[1];
}
bool Interval_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Side_descriptor() {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_enum_descriptors[2];
}
bool Side_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Action_descriptor() {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_enum_descriptors[3];
}
bool Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Candlestick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Candlestick::kTsFieldNumber;
const int Candlestick::kIdFieldNumber;
const int Candlestick::kOpenFieldNumber;
const int Candlestick::kCloseFieldNumber;
const int Candlestick::kLowFieldNumber;
const int Candlestick::kHighFieldNumber;
const int Candlestick::kTurnoverFieldNumber;
const int Candlestick::kVolumeFieldNumber;
const int Candlestick::kNumOfTradesFieldNumber;
const int Candlestick::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Candlestick::Candlestick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Candlestick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Candlestick)
}
Candlestick::Candlestick(const Candlestick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open().size() > 0) {
    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.close().size() > 0) {
    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.low().size() > 0) {
    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.high().size() > 0) {
    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.turnover().size() > 0) {
    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_of_trades_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Candlestick)
}

void Candlestick::SharedCtor() {
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
}

Candlestick::~Candlestick() {
  // @@protoc_insertion_point(destructor:HuobiProto.Candlestick)
  SharedDtor();
}

void Candlestick::SharedDtor() {
  open_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Candlestick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Candlestick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Candlestick& Candlestick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Candlestick.base);
  return *internal_default_instance();
}


void Candlestick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Candlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  _internal_metadata_.Clear();
}

bool Candlestick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Candlestick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open().data(), static_cast<int>(this->open().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.open"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string close = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_close()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->close().data(), static_cast<int>(this->close().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.close"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string low = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_low()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->low().data(), static_cast<int>(this->low().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.low"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string high = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_high()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->high().data(), static_cast<int>(this->high().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.high"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string turnover = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_turnover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->turnover().data(), static_cast<int>(this->turnover().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.turnover"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_of_trades = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_trades_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Candlestick.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Candlestick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Candlestick)
  return false;
#undef DO_
}

void Candlestick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Candlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts(), output);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // string open = 3;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.open");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->open(), output);
  }

  // string close = 4;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.close");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->close(), output);
  }

  // string low = 5;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.low");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->low(), output);
  }

  // string high = 6;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.high");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->high(), output);
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.turnover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->turnover(), output);
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->volume(), output);
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_of_trades(), output);
  }

  // string symbol = 10;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->symbol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Candlestick)
}

::google::protobuf::uint8* Candlestick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Candlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // string open = 3;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.open");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->open(), target);
  }

  // string close = 4;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.close");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->close(), target);
  }

  // string low = 5;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.low");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->low(), target);
  }

  // string high = 6;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.high");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->high(), target);
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.turnover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->turnover(), target);
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->volume(), target);
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_of_trades(), target);
  }

  // string symbol = 10;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Candlestick.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->symbol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Candlestick)
  return target;
}

size_t Candlestick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Candlestick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string open = 3;
  if (this->open().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open());
  }

  // string close = 4;
  if (this->close().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->close());
  }

  // string low = 5;
  if (this->low().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->low());
  }

  // string high = 6;
  if (this->high().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->high());
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->turnover());
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // string symbol = 10;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int64 ts = 1;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_of_trades());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Candlestick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Candlestick)
  GOOGLE_DCHECK_NE(&from, this);
  const Candlestick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Candlestick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Candlestick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Candlestick)
    MergeFrom(*source);
  }
}

void Candlestick::MergeFrom(const Candlestick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Candlestick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.open().size() > 0) {

    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  if (from.close().size() > 0) {

    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  if (from.low().size() > 0) {

    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  if (from.high().size() > 0) {

    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  if (from.turnover().size() > 0) {

    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num_of_trades() != 0) {
    set_num_of_trades(from.num_of_trades());
  }
}

void Candlestick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Candlestick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Candlestick::CopyFrom(const Candlestick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Candlestick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Candlestick::IsInitialized() const {
  return true;
}

void Candlestick::Swap(Candlestick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Candlestick::InternalSwap(Candlestick* other) {
  using std::swap;
  open_.Swap(&other->open_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  close_.Swap(&other->close_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  low_.Swap(&other->low_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  high_.Swap(&other->high_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  turnover_.Swap(&other->turnover_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(id_, other->id_);
  swap(num_of_trades_, other->num_of_trades_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Candlestick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqCandlestick_Tick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCandlestick_Tick::kTsFieldNumber;
const int ReqCandlestick_Tick::kIdFieldNumber;
const int ReqCandlestick_Tick::kOpenFieldNumber;
const int ReqCandlestick_Tick::kCloseFieldNumber;
const int ReqCandlestick_Tick::kLowFieldNumber;
const int ReqCandlestick_Tick::kHighFieldNumber;
const int ReqCandlestick_Tick::kTurnoverFieldNumber;
const int ReqCandlestick_Tick::kVolumeFieldNumber;
const int ReqCandlestick_Tick::kNumOfTradesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCandlestick_Tick::ReqCandlestick_Tick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqCandlestick_Tick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.ReqCandlestick.Tick)
}
ReqCandlestick_Tick::ReqCandlestick_Tick(const ReqCandlestick_Tick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open().size() > 0) {
    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.close().size() > 0) {
    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.low().size() > 0) {
    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.high().size() > 0) {
    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.turnover().size() > 0) {
    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_of_trades_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.ReqCandlestick.Tick)
}

void ReqCandlestick_Tick::SharedCtor() {
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
}

ReqCandlestick_Tick::~ReqCandlestick_Tick() {
  // @@protoc_insertion_point(destructor:HuobiProto.ReqCandlestick.Tick)
  SharedDtor();
}

void ReqCandlestick_Tick::SharedDtor() {
  open_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqCandlestick_Tick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqCandlestick_Tick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqCandlestick_Tick& ReqCandlestick_Tick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqCandlestick_Tick.base);
  return *internal_default_instance();
}


void ReqCandlestick_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.ReqCandlestick.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  _internal_metadata_.Clear();
}

bool ReqCandlestick_Tick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.ReqCandlestick.Tick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open().data(), static_cast<int>(this->open().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.open"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string close = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_close()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->close().data(), static_cast<int>(this->close().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.close"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string low = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_low()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->low().data(), static_cast<int>(this->low().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.low"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string high = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_high()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->high().data(), static_cast<int>(this->high().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.high"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string turnover = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_turnover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->turnover().data(), static_cast<int>(this->turnover().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.turnover"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.Tick.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_of_trades = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_trades_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.ReqCandlestick.Tick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.ReqCandlestick.Tick)
  return false;
#undef DO_
}

void ReqCandlestick_Tick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.ReqCandlestick.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts(), output);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // string open = 3;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.open");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->open(), output);
  }

  // string close = 4;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.close");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->close(), output);
  }

  // string low = 5;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.low");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->low(), output);
  }

  // string high = 6;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.high");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->high(), output);
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.turnover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->turnover(), output);
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->volume(), output);
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_of_trades(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.ReqCandlestick.Tick)
}

::google::protobuf::uint8* ReqCandlestick_Tick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.ReqCandlestick.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // string open = 3;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.open");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->open(), target);
  }

  // string close = 4;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.close");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->close(), target);
  }

  // string low = 5;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.low");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->low(), target);
  }

  // string high = 6;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.high");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->high(), target);
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.turnover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->turnover(), target);
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.Tick.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->volume(), target);
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_of_trades(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.ReqCandlestick.Tick)
  return target;
}

size_t ReqCandlestick_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.ReqCandlestick.Tick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string open = 3;
  if (this->open().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open());
  }

  // string close = 4;
  if (this->close().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->close());
  }

  // string low = 5;
  if (this->low().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->low());
  }

  // string high = 6;
  if (this->high().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->high());
  }

  // string turnover = 7;
  if (this->turnover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->turnover());
  }

  // string volume = 8;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // int64 ts = 1;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 num_of_trades = 9;
  if (this->num_of_trades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_of_trades());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCandlestick_Tick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.ReqCandlestick.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCandlestick_Tick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCandlestick_Tick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.ReqCandlestick.Tick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.ReqCandlestick.Tick)
    MergeFrom(*source);
  }
}

void ReqCandlestick_Tick::MergeFrom(const ReqCandlestick_Tick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.ReqCandlestick.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.open().size() > 0) {

    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  if (from.close().size() > 0) {

    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  if (from.low().size() > 0) {

    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  if (from.high().size() > 0) {

    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  if (from.turnover().size() > 0) {

    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num_of_trades() != 0) {
    set_num_of_trades(from.num_of_trades());
  }
}

void ReqCandlestick_Tick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.ReqCandlestick.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCandlestick_Tick::CopyFrom(const ReqCandlestick_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.ReqCandlestick.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCandlestick_Tick::IsInitialized() const {
  return true;
}

void ReqCandlestick_Tick::Swap(ReqCandlestick_Tick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCandlestick_Tick::InternalSwap(ReqCandlestick_Tick* other) {
  using std::swap;
  open_.Swap(&other->open_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  close_.Swap(&other->close_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  low_.Swap(&other->low_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  high_.Swap(&other->high_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  turnover_.Swap(&other->turnover_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(id_, other->id_);
  swap(num_of_trades_, other->num_of_trades_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqCandlestick_Tick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqCandlestick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCandlestick::kSymbolFieldNumber;
const int ReqCandlestick::kCandlesticksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCandlestick::ReqCandlestick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqCandlestick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.ReqCandlestick)
}
ReqCandlestick::ReqCandlestick(const ReqCandlestick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candlesticks_(from.candlesticks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  // @@protoc_insertion_point(copy_constructor:HuobiProto.ReqCandlestick)
}

void ReqCandlestick::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqCandlestick::~ReqCandlestick() {
  // @@protoc_insertion_point(destructor:HuobiProto.ReqCandlestick)
  SharedDtor();
}

void ReqCandlestick::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqCandlestick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqCandlestick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqCandlestick& ReqCandlestick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqCandlestick.base);
  return *internal_default_instance();
}


void ReqCandlestick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.ReqCandlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candlesticks_.Clear();
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReqCandlestick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.ReqCandlestick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqCandlestick.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HuobiProto.ReqCandlestick.Tick candlesticks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_candlesticks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.ReqCandlestick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.ReqCandlestick)
  return false;
#undef DO_
}

void ReqCandlestick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.ReqCandlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // repeated .HuobiProto.ReqCandlestick.Tick candlesticks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candlesticks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->candlesticks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.ReqCandlestick)
}

::google::protobuf::uint8* ReqCandlestick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.ReqCandlestick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqCandlestick.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // repeated .HuobiProto.ReqCandlestick.Tick candlesticks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->candlesticks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->candlesticks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.ReqCandlestick)
  return target;
}

size_t ReqCandlestick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.ReqCandlestick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HuobiProto.ReqCandlestick.Tick candlesticks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->candlesticks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->candlesticks(static_cast<int>(i)));
    }
  }

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCandlestick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.ReqCandlestick)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCandlestick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCandlestick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.ReqCandlestick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.ReqCandlestick)
    MergeFrom(*source);
  }
}

void ReqCandlestick::MergeFrom(const ReqCandlestick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.ReqCandlestick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candlesticks_.MergeFrom(from.candlesticks_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
}

void ReqCandlestick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.ReqCandlestick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCandlestick::CopyFrom(const ReqCandlestick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.ReqCandlestick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCandlestick::IsInitialized() const {
  return true;
}

void ReqCandlestick::Swap(ReqCandlestick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCandlestick::InternalSwap(ReqCandlestick* other) {
  using std::swap;
  CastToBase(&candlesticks_)->InternalSwap(CastToBase(&other->candlesticks_));
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqCandlestick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Depth_Tick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Depth_Tick::kPriceFieldNumber;
const int Depth_Tick::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Depth_Tick::Depth_Tick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Depth_Tick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Depth.Tick)
}
Depth_Tick::Depth_Tick(const Depth_Tick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.size().size() > 0) {
    size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
  }
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Depth.Tick)
}

void Depth_Tick::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Depth_Tick::~Depth_Tick() {
  // @@protoc_insertion_point(destructor:HuobiProto.Depth.Tick)
  SharedDtor();
}

void Depth_Tick::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Depth_Tick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Depth_Tick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Depth_Tick& Depth_Tick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Depth_Tick.base);
  return *internal_default_instance();
}


void Depth_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Depth.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Depth_Tick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Depth.Tick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Depth.Tick.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->size().data(), static_cast<int>(this->size().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Depth.Tick.size"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Depth.Tick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Depth.Tick)
  return false;
#undef DO_
}

void Depth_Tick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Depth.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.Tick.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->price(), output);
  }

  // string size = 2;
  if (this->size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.Tick.size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Depth.Tick)
}

::google::protobuf::uint8* Depth_Tick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Depth.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.Tick.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->price(), target);
  }

  // string size = 2;
  if (this->size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->size().data(), static_cast<int>(this->size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.Tick.size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Depth.Tick)
  return target;
}

size_t Depth_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Depth.Tick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string price = 1;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // string size = 2;
  if (this->size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Depth_Tick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Depth.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  const Depth_Tick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Depth_Tick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Depth.Tick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Depth.Tick)
    MergeFrom(*source);
  }
}

void Depth_Tick::MergeFrom(const Depth_Tick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Depth.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.size().size() > 0) {

    size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.size_);
  }
}

void Depth_Tick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Depth.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Depth_Tick::CopyFrom(const Depth_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Depth.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Depth_Tick::IsInitialized() const {
  return true;
}

void Depth_Tick::Swap(Depth_Tick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Depth_Tick::InternalSwap(Depth_Tick* other) {
  using std::swap;
  price_.Swap(&other->price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  size_.Swap(&other->size_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Depth_Tick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Depth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Depth::kTsFieldNumber;
const int Depth::kBidsFieldNumber;
const int Depth::kAsksFieldNumber;
const int Depth::kDeltaFieldNumber;
const int Depth::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Depth::Depth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Depth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Depth)
}
Depth::Depth(const Depth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bids_(from.bids_),
      asks_(from.asks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(delta_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Depth)
}

void Depth::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(delta_));
}

Depth::~Depth() {
  // @@protoc_insertion_point(destructor:HuobiProto.Depth)
  SharedDtor();
}

void Depth::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Depth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Depth::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Depth& Depth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Depth.base);
  return *internal_default_instance();
}


void Depth::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bids_.Clear();
  asks_.Clear();
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(delta_));
  _internal_metadata_.Clear();
}

bool Depth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Depth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HuobiProto.Depth.Tick bids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HuobiProto.Depth.Tick asks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_asks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Depth.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Depth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Depth)
  return false;
#undef DO_
}

void Depth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts(), output);
  }

  // repeated .HuobiProto.Depth.Tick bids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->bids(static_cast<int>(i)),
      output);
  }

  // repeated .HuobiProto.Depth.Tick asks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->asks(static_cast<int>(i)),
      output);
  }

  // bool delta = 4;
  if (this->delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->delta(), output);
  }

  // string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->symbol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Depth)
}

::google::protobuf::uint8* Depth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts(), target);
  }

  // repeated .HuobiProto.Depth.Tick bids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->bids(static_cast<int>(i)), deterministic, target);
  }

  // repeated .HuobiProto.Depth.Tick asks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->asks(static_cast<int>(i)), deterministic, target);
  }

  // bool delta = 4;
  if (this->delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->delta(), target);
  }

  // string symbol = 5;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Depth.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->symbol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Depth)
  return target;
}

size_t Depth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Depth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HuobiProto.Depth.Tick bids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bids(static_cast<int>(i)));
    }
  }

  // repeated .HuobiProto.Depth.Tick asks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->asks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->asks(static_cast<int>(i)));
    }
  }

  // string symbol = 5;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int64 ts = 1;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // bool delta = 4;
  if (this->delta() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Depth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Depth)
  GOOGLE_DCHECK_NE(&from, this);
  const Depth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Depth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Depth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Depth)
    MergeFrom(*source);
  }
}

void Depth::MergeFrom(const Depth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Depth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_.MergeFrom(from.bids_);
  asks_.MergeFrom(from.asks_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.delta() != 0) {
    set_delta(from.delta());
  }
}

void Depth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Depth::CopyFrom(const Depth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Depth::IsInitialized() const {
  return true;
}

void Depth::Swap(Depth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Depth::InternalSwap(Depth* other) {
  using std::swap;
  CastToBase(&bids_)->InternalSwap(CastToBase(&other->bids_));
  CastToBase(&asks_)->InternalSwap(CastToBase(&other->asks_));
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(delta_, other->delta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Depth::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggrTrade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggrTrade::kFirstTradeIdFieldNumber;
const int AggrTrade::kLastTradeIdFieldNumber;
const int AggrTrade::kTsFieldNumber;
const int AggrTrade::kPriceFieldNumber;
const int AggrTrade::kVolumeFieldNumber;
const int AggrTrade::kSideFieldNumber;
const int AggrTrade::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggrTrade::AggrTrade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_AggrTrade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.AggrTrade)
}
AggrTrade::AggrTrade(const AggrTrade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&first_trade_id_, &from.first_trade_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&first_trade_id_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.AggrTrade)
}

void AggrTrade::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&first_trade_id_)) + sizeof(side_));
}

AggrTrade::~AggrTrade() {
  // @@protoc_insertion_point(destructor:HuobiProto.AggrTrade)
  SharedDtor();
}

void AggrTrade::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AggrTrade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggrTrade::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggrTrade& AggrTrade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_AggrTrade.base);
  return *internal_default_instance();
}


void AggrTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.AggrTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&first_trade_id_)) + sizeof(side_));
  _internal_metadata_.Clear();
}

bool AggrTrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.AggrTrade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 first_trade_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_trade_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_trade_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_trade_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.AggrTrade.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.AggrTrade.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HuobiProto.Side side = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::HuobiProto::Side >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.AggrTrade.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.AggrTrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.AggrTrade)
  return false;
#undef DO_
}

void AggrTrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.AggrTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 first_trade_id = 1;
  if (this->first_trade_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->first_trade_id(), output);
  }

  // int64 last_trade_id = 2;
  if (this->last_trade_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_trade_id(), output);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ts(), output);
  }

  // string price = 4;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->price(), output);
  }

  // string volume = 5;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->volume(), output);
  }

  // .HuobiProto.Side side = 6;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->side(), output);
  }

  // string symbol = 7;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->symbol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.AggrTrade)
}

::google::protobuf::uint8* AggrTrade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.AggrTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 first_trade_id = 1;
  if (this->first_trade_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->first_trade_id(), target);
  }

  // int64 last_trade_id = 2;
  if (this->last_trade_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->last_trade_id(), target);
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ts(), target);
  }

  // string price = 4;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->price(), target);
  }

  // string volume = 5;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->volume(), target);
  }

  // .HuobiProto.Side side = 6;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->side(), target);
  }

  // string symbol = 7;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.AggrTrade.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->symbol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.AggrTrade)
  return target;
}

size_t AggrTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.AggrTrade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string price = 4;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // string volume = 5;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // string symbol = 7;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int64 first_trade_id = 1;
  if (this->first_trade_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->first_trade_id());
  }

  // int64 last_trade_id = 2;
  if (this->last_trade_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_trade_id());
  }

  // int64 ts = 3;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // .HuobiProto.Side side = 6;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggrTrade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.AggrTrade)
  GOOGLE_DCHECK_NE(&from, this);
  const AggrTrade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggrTrade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.AggrTrade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.AggrTrade)
    MergeFrom(*source);
  }
}

void AggrTrade::MergeFrom(const AggrTrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.AggrTrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.first_trade_id() != 0) {
    set_first_trade_id(from.first_trade_id());
  }
  if (from.last_trade_id() != 0) {
    set_last_trade_id(from.last_trade_id());
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void AggrTrade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.AggrTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggrTrade::CopyFrom(const AggrTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.AggrTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggrTrade::IsInitialized() const {
  return true;
}

void AggrTrade::Swap(AggrTrade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggrTrade::InternalSwap(AggrTrade* other) {
  using std::swap;
  price_.Swap(&other->price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(first_trade_id_, other->first_trade_id_);
  swap(last_trade_id_, other->last_trade_id_);
  swap(ts_, other->ts_);
  swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggrTrade::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trade::kTradeIdFieldNumber;
const int Trade::kTsFieldNumber;
const int Trade::kPriceFieldNumber;
const int Trade::kVolumeFieldNumber;
const int Trade::kSideFieldNumber;
const int Trade::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trade::Trade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Trade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Trade)
}
Trade::Trade(const Trade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&trade_id_, &from.trade_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Trade)
}

void Trade::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
}

Trade::~Trade() {
  // @@protoc_insertion_point(destructor:HuobiProto.Trade)
  SharedDtor();
}

void Trade::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Trade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trade::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trade& Trade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Trade.base);
  return *internal_default_instance();
}


void Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Trade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
  _internal_metadata_.Clear();
}

bool Trade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Trade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 trade_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trade_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Trade.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Trade.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HuobiProto.Side side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::HuobiProto::Side >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Trade.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Trade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Trade)
  return false;
#undef DO_
}

void Trade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Trade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->trade_id(), output);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts(), output);
  }

  // string price = 3;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->price(), output);
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->volume(), output);
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->side(), output);
  }

  // string symbol = 6;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->symbol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Trade)
}

::google::protobuf::uint8* Trade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Trade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->trade_id(), target);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts(), target);
  }

  // string price = 3;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->price(), target);
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->volume(), target);
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->side(), target);
  }

  // string symbol = 6;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Trade.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->symbol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Trade)
  return target;
}

size_t Trade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Trade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string price = 3;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // string symbol = 6;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trade_id());
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Trade)
  GOOGLE_DCHECK_NE(&from, this);
  const Trade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Trade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Trade)
    MergeFrom(*source);
  }
}

void Trade::MergeFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Trade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.trade_id() != 0) {
    set_trade_id(from.trade_id());
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void Trade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trade::CopyFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trade::IsInitialized() const {
  return true;
}

void Trade::Swap(Trade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trade::InternalSwap(Trade* other) {
  using std::swap;
  price_.Swap(&other->price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(trade_id_, other->trade_id_);
  swap(ts_, other->ts_);
  swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trade::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqTrade_Tick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqTrade_Tick::kTradeIdFieldNumber;
const int ReqTrade_Tick::kTsFieldNumber;
const int ReqTrade_Tick::kPriceFieldNumber;
const int ReqTrade_Tick::kVolumeFieldNumber;
const int ReqTrade_Tick::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqTrade_Tick::ReqTrade_Tick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqTrade_Tick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.ReqTrade.Tick)
}
ReqTrade_Tick::ReqTrade_Tick(const ReqTrade_Tick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  ::memcpy(&trade_id_, &from.trade_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.ReqTrade.Tick)
}

void ReqTrade_Tick::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
}

ReqTrade_Tick::~ReqTrade_Tick() {
  // @@protoc_insertion_point(destructor:HuobiProto.ReqTrade.Tick)
  SharedDtor();
}

void ReqTrade_Tick::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqTrade_Tick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqTrade_Tick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqTrade_Tick& ReqTrade_Tick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqTrade_Tick.base);
  return *internal_default_instance();
}


void ReqTrade_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.ReqTrade.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&trade_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&trade_id_)) + sizeof(side_));
  _internal_metadata_.Clear();
}

bool ReqTrade_Tick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.ReqTrade.Tick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 trade_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trade_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqTrade.Tick.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqTrade.Tick.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HuobiProto.Side side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::HuobiProto::Side >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.ReqTrade.Tick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.ReqTrade.Tick)
  return false;
#undef DO_
}

void ReqTrade_Tick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.ReqTrade.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->trade_id(), output);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts(), output);
  }

  // string price = 3;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.Tick.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->price(), output);
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.Tick.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->volume(), output);
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->side(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.ReqTrade.Tick)
}

::google::protobuf::uint8* ReqTrade_Tick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.ReqTrade.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->trade_id(), target);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts(), target);
  }

  // string price = 3;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.Tick.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->price(), target);
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.Tick.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->volume(), target);
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->side(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.ReqTrade.Tick)
  return target;
}

size_t ReqTrade_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.ReqTrade.Tick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string price = 3;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // string volume = 4;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // int64 trade_id = 1;
  if (this->trade_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trade_id());
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // .HuobiProto.Side side = 5;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqTrade_Tick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.ReqTrade.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqTrade_Tick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqTrade_Tick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.ReqTrade.Tick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.ReqTrade.Tick)
    MergeFrom(*source);
  }
}

void ReqTrade_Tick::MergeFrom(const ReqTrade_Tick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.ReqTrade.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.trade_id() != 0) {
    set_trade_id(from.trade_id());
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void ReqTrade_Tick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.ReqTrade.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqTrade_Tick::CopyFrom(const ReqTrade_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.ReqTrade.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqTrade_Tick::IsInitialized() const {
  return true;
}

void ReqTrade_Tick::Swap(ReqTrade_Tick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqTrade_Tick::InternalSwap(ReqTrade_Tick* other) {
  using std::swap;
  price_.Swap(&other->price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(trade_id_, other->trade_id_);
  swap(ts_, other->ts_);
  swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqTrade_Tick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqTrade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqTrade::kSymbolFieldNumber;
const int ReqTrade::kTradesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqTrade::ReqTrade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqTrade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.ReqTrade)
}
ReqTrade::ReqTrade(const ReqTrade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trades_(from.trades_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  // @@protoc_insertion_point(copy_constructor:HuobiProto.ReqTrade)
}

void ReqTrade::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqTrade::~ReqTrade() {
  // @@protoc_insertion_point(destructor:HuobiProto.ReqTrade)
  SharedDtor();
}

void ReqTrade::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqTrade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqTrade::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqTrade& ReqTrade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_ReqTrade.base);
  return *internal_default_instance();
}


void ReqTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.ReqTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trades_.Clear();
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReqTrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.ReqTrade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.ReqTrade.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HuobiProto.ReqTrade.Tick trades = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trades()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.ReqTrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.ReqTrade)
  return false;
#undef DO_
}

void ReqTrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.ReqTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // repeated .HuobiProto.ReqTrade.Tick trades = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trades_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->trades(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.ReqTrade)
}

::google::protobuf::uint8* ReqTrade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.ReqTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.ReqTrade.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // repeated .HuobiProto.ReqTrade.Tick trades = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trades_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->trades(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.ReqTrade)
  return target;
}

size_t ReqTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.ReqTrade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HuobiProto.ReqTrade.Tick trades = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->trades_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trades(static_cast<int>(i)));
    }
  }

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqTrade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.ReqTrade)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqTrade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqTrade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.ReqTrade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.ReqTrade)
    MergeFrom(*source);
  }
}

void ReqTrade::MergeFrom(const ReqTrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.ReqTrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trades_.MergeFrom(from.trades_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
}

void ReqTrade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.ReqTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqTrade::CopyFrom(const ReqTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.ReqTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqTrade::IsInitialized() const {
  return true;
}

void ReqTrade::Swap(ReqTrade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqTrade::InternalSwap(ReqTrade* other) {
  using std::swap;
  CastToBase(&trades_)->InternalSwap(CastToBase(&other->trades_));
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqTrade::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MarketSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketSummary::kSymbolFieldNumber;
const int MarketSummary::kTsFieldNumber;
const int MarketSummary::kIdFieldNumber;
const int MarketSummary::kOpenFieldNumber;
const int MarketSummary::kCloseFieldNumber;
const int MarketSummary::kLowFieldNumber;
const int MarketSummary::kHighFieldNumber;
const int MarketSummary::kTurnoverFieldNumber;
const int MarketSummary::kVolumeFieldNumber;
const int MarketSummary::kNumOfTradesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketSummary::MarketSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_MarketSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.MarketSummary)
}
MarketSummary::MarketSummary(const MarketSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open().size() > 0) {
    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.close().size() > 0) {
    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.low().size() > 0) {
    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.high().size() > 0) {
    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.turnover().size() > 0) {
    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  ::memcpy(&ts_, &from.ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_of_trades_) -
    reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.MarketSummary)
}

void MarketSummary::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
}

MarketSummary::~MarketSummary() {
  // @@protoc_insertion_point(destructor:HuobiProto.MarketSummary)
  SharedDtor();
}

void MarketSummary::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MarketSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MarketSummary::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketSummary& MarketSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_MarketSummary.base);
  return *internal_default_instance();
}


void MarketSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.MarketSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_trades_) -
      reinterpret_cast<char*>(&ts_)) + sizeof(num_of_trades_));
  _internal_metadata_.Clear();
}

bool MarketSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.MarketSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open().data(), static_cast<int>(this->open().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.open"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string close = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_close()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->close().data(), static_cast<int>(this->close().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.close"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string low = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_low()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->low().data(), static_cast<int>(this->low().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.low"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string high = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_high()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->high().data(), static_cast<int>(this->high().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.high"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string turnover = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_turnover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->turnover().data(), static_cast<int>(this->turnover().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.turnover"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.MarketSummary.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_of_trades = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_trades_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.MarketSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.MarketSummary)
  return false;
#undef DO_
}

void MarketSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.MarketSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts(), output);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->id(), output);
  }

  // string open = 4;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.open");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->open(), output);
  }

  // string close = 5;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.close");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->close(), output);
  }

  // string low = 6;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.low");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->low(), output);
  }

  // string high = 7;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.high");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->high(), output);
  }

  // string turnover = 8;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.turnover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->turnover(), output);
  }

  // string volume = 9;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->volume(), output);
  }

  // int32 num_of_trades = 10;
  if (this->num_of_trades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_of_trades(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.MarketSummary)
}

::google::protobuf::uint8* MarketSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.MarketSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts(), target);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->id(), target);
  }

  // string open = 4;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.open");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->open(), target);
  }

  // string close = 5;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.close");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->close(), target);
  }

  // string low = 6;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.low");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->low(), target);
  }

  // string high = 7;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.high");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->high(), target);
  }

  // string turnover = 8;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.turnover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->turnover(), target);
  }

  // string volume = 9;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.MarketSummary.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->volume(), target);
  }

  // int32 num_of_trades = 10;
  if (this->num_of_trades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->num_of_trades(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.MarketSummary)
  return target;
}

size_t MarketSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.MarketSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string open = 4;
  if (this->open().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open());
  }

  // string close = 5;
  if (this->close().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->close());
  }

  // string low = 6;
  if (this->low().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->low());
  }

  // string high = 7;
  if (this->high().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->high());
  }

  // string turnover = 8;
  if (this->turnover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->turnover());
  }

  // string volume = 9;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // int64 ts = 2;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  // int64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 num_of_trades = 10;
  if (this->num_of_trades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_of_trades());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MarketSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.MarketSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.MarketSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.MarketSummary)
    MergeFrom(*source);
  }
}

void MarketSummary::MergeFrom(const MarketSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.MarketSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.open().size() > 0) {

    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  if (from.close().size() > 0) {

    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  if (from.low().size() > 0) {

    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  if (from.high().size() > 0) {

    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  if (from.turnover().size() > 0) {

    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num_of_trades() != 0) {
    set_num_of_trades(from.num_of_trades());
  }
}

void MarketSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.MarketSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketSummary::CopyFrom(const MarketSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.MarketSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketSummary::IsInitialized() const {
  return true;
}

void MarketSummary::Swap(MarketSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketSummary::InternalSwap(MarketSummary* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  open_.Swap(&other->open_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  close_.Swap(&other->close_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  low_.Swap(&other->low_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  high_.Swap(&other->high_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  turnover_.Swap(&other->turnover_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ts_, other->ts_);
  swap(id_, other->id_);
  swap(num_of_trades_, other->num_of_trades_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MarketSummary::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Overview_Tick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Overview_Tick::kSymbolFieldNumber;
const int Overview_Tick::kOpenFieldNumber;
const int Overview_Tick::kCloseFieldNumber;
const int Overview_Tick::kLowFieldNumber;
const int Overview_Tick::kHighFieldNumber;
const int Overview_Tick::kTurnoverFieldNumber;
const int Overview_Tick::kVolumeFieldNumber;
const int Overview_Tick::kNumOfTradesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Overview_Tick::Overview_Tick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Overview_Tick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Overview.Tick)
}
Overview_Tick::Overview_Tick(const Overview_Tick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open().size() > 0) {
    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.close().size() > 0) {
    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.low().size() > 0) {
    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.high().size() > 0) {
    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.turnover().size() > 0) {
    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  num_of_trades_ = from.num_of_trades_;
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Overview.Tick)
}

void Overview_Tick::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_of_trades_ = 0;
}

Overview_Tick::~Overview_Tick() {
  // @@protoc_insertion_point(destructor:HuobiProto.Overview.Tick)
  SharedDtor();
}

void Overview_Tick::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Overview_Tick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Overview_Tick::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Overview_Tick& Overview_Tick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Overview_Tick.base);
  return *internal_default_instance();
}


void Overview_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Overview.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  close_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_of_trades_ = 0;
  _internal_metadata_.Clear();
}

bool Overview_Tick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Overview.Tick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open().data(), static_cast<int>(this->open().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.open"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string close = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_close()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->close().data(), static_cast<int>(this->close().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.close"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string low = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_low()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->low().data(), static_cast<int>(this->low().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.low"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string high = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_high()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->high().data(), static_cast<int>(this->high().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.high"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string turnover = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_turnover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->turnover().data(), static_cast<int>(this->turnover().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.turnover"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Overview.Tick.volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_of_trades = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_of_trades_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Overview.Tick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Overview.Tick)
  return false;
#undef DO_
}

void Overview_Tick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Overview.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // string open = 2;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.open");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->open(), output);
  }

  // string close = 3;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.close");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->close(), output);
  }

  // string low = 4;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.low");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->low(), output);
  }

  // string high = 5;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.high");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->high(), output);
  }

  // string turnover = 6;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.turnover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->turnover(), output);
  }

  // string volume = 7;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->volume(), output);
  }

  // int32 num_of_trades = 8;
  if (this->num_of_trades() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_of_trades(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Overview.Tick)
}

::google::protobuf::uint8* Overview_Tick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Overview.Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // string open = 2;
  if (this->open().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open().data(), static_cast<int>(this->open().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.open");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->open(), target);
  }

  // string close = 3;
  if (this->close().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->close().data(), static_cast<int>(this->close().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.close");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->close(), target);
  }

  // string low = 4;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->low().data(), static_cast<int>(this->low().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.low");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->low(), target);
  }

  // string high = 5;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->high().data(), static_cast<int>(this->high().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.high");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->high(), target);
  }

  // string turnover = 6;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), static_cast<int>(this->turnover().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.turnover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->turnover(), target);
  }

  // string volume = 7;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Overview.Tick.volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->volume(), target);
  }

  // int32 num_of_trades = 8;
  if (this->num_of_trades() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num_of_trades(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Overview.Tick)
  return target;
}

size_t Overview_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Overview.Tick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string open = 2;
  if (this->open().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open());
  }

  // string close = 3;
  if (this->close().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->close());
  }

  // string low = 4;
  if (this->low().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->low());
  }

  // string high = 5;
  if (this->high().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->high());
  }

  // string turnover = 6;
  if (this->turnover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->turnover());
  }

  // string volume = 7;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // int32 num_of_trades = 8;
  if (this->num_of_trades() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_of_trades());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Overview_Tick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Overview.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  const Overview_Tick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Overview_Tick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Overview.Tick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Overview.Tick)
    MergeFrom(*source);
  }
}

void Overview_Tick::MergeFrom(const Overview_Tick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Overview.Tick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.open().size() > 0) {

    open_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_);
  }
  if (from.close().size() > 0) {

    close_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.close_);
  }
  if (from.low().size() > 0) {

    low_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_);
  }
  if (from.high().size() > 0) {

    high_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high_);
  }
  if (from.turnover().size() > 0) {

    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.num_of_trades() != 0) {
    set_num_of_trades(from.num_of_trades());
  }
}

void Overview_Tick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Overview.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Overview_Tick::CopyFrom(const Overview_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Overview.Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Overview_Tick::IsInitialized() const {
  return true;
}

void Overview_Tick::Swap(Overview_Tick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Overview_Tick::InternalSwap(Overview_Tick* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  open_.Swap(&other->open_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  close_.Swap(&other->close_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  low_.Swap(&other->low_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  high_.Swap(&other->high_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  turnover_.Swap(&other->turnover_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_.Swap(&other->volume_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(num_of_trades_, other->num_of_trades_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Overview_Tick::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Overview::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Overview::kTsFieldNumber;
const int Overview::kTickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Overview::Overview()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Overview.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Overview)
}
Overview::Overview(const Overview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tick_(from.tick_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Overview)
}

void Overview::SharedCtor() {
  ts_ = GOOGLE_LONGLONG(0);
}

Overview::~Overview() {
  // @@protoc_insertion_point(destructor:HuobiProto.Overview)
  SharedDtor();
}

void Overview::SharedDtor() {
}

void Overview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Overview::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Overview& Overview::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Overview.base);
  return *internal_default_instance();
}


void Overview::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Overview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tick_.Clear();
  ts_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Overview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Overview)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .HuobiProto.Overview.Tick tick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Overview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Overview)
  return false;
#undef DO_
}

void Overview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Overview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts(), output);
  }

  // repeated .HuobiProto.Overview.Tick tick = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tick_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tick(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Overview)
}

::google::protobuf::uint8* Overview::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Overview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts(), target);
  }

  // repeated .HuobiProto.Overview.Tick tick = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tick_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tick(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Overview)
  return target;
}

size_t Overview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Overview)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .HuobiProto.Overview.Tick tick = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tick_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tick(static_cast<int>(i)));
    }
  }

  // int64 ts = 1;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Overview::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Overview)
  GOOGLE_DCHECK_NE(&from, this);
  const Overview* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Overview>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Overview)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Overview)
    MergeFrom(*source);
  }
}

void Overview::MergeFrom(const Overview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Overview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tick_.MergeFrom(from.tick_);
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void Overview::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Overview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Overview::CopyFrom(const Overview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Overview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Overview::IsInitialized() const {
  return true;
}

void Overview::Swap(Overview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Overview::InternalSwap(Overview* other) {
  using std::swap;
  CastToBase(&tick_)->InternalSwap(CastToBase(&other->tick_));
  swap(ts_, other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Overview::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Ping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ts_ = from.ts_;
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Ping)
}

void Ping::SharedCtor() {
  ts_ = GOOGLE_LONGLONG(0);
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:HuobiProto.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Ping.base);
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ts_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ts = 1;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ts = 1;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  swap(ts_, other->ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Result::InitAsDefaultInstance() {
  ::HuobiProto::_Result_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Result::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kCodeFieldNumber;
const int Result::kSequenceFieldNumber;
const int Result::kActionFieldNumber;
const int Result::kChFieldNumber;
const int Result::kMessageFieldNumber;
const int Result::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Result.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:HuobiProto.Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ch().size() > 0) {
    ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ch_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&sequence_, &from.sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&sequence_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:HuobiProto.Result)
}

void Result::SharedCtor() {
  ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&data_)) + sizeof(action_));
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:HuobiProto.Result)
  SharedDtor();
}

void Result::SharedDtor() {
  ch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::scc_info_Result.base);
  return *internal_default_instance();
}


void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:HuobiProto.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HuobiProto.Result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HuobiProto.Action action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::HuobiProto::Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ch().data(), static_cast<int>(this->ch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Result.ch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HuobiProto.Result.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HuobiProto.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HuobiProto.Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HuobiProto.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // int64 sequence = 2;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sequence(), output);
  }

  // .HuobiProto.Action action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action(), output);
  }

  // string ch = 4;
  if (this->ch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ch().data(), static_cast<int>(this->ch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Result.ch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ch(), output);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Result.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // .google.protobuf.Any data = 15;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HuobiProto.Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HuobiProto.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // int64 sequence = 2;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sequence(), target);
  }

  // .HuobiProto.Action action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action(), target);
  }

  // string ch = 4;
  if (this->ch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ch().data(), static_cast<int>(this->ch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Result.ch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ch(), target);
  }

  // string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HuobiProto.Result.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // .google.protobuf.Any data = 15;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HuobiProto.Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HuobiProto.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ch = 4;
  if (this->ch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ch());
  }

  // string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .google.protobuf.Any data = 15;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // int64 sequence = 2;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // .HuobiProto.Action action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HuobiProto.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HuobiProto.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HuobiProto.Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HuobiProto.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ch().size() > 0) {

    ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ch_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HuobiProto.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HuobiProto.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  using std::swap;
  ch_.Swap(&other->ch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(sequence_, other->sequence_);
  swap(code_, other->code_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_huobi_5fmarket_5fdownstream_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace HuobiProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Candlestick* Arena::CreateMaybeMessage< ::HuobiProto::Candlestick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Candlestick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::ReqCandlestick_Tick* Arena::CreateMaybeMessage< ::HuobiProto::ReqCandlestick_Tick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::ReqCandlestick_Tick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::ReqCandlestick* Arena::CreateMaybeMessage< ::HuobiProto::ReqCandlestick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::ReqCandlestick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Depth_Tick* Arena::CreateMaybeMessage< ::HuobiProto::Depth_Tick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Depth_Tick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Depth* Arena::CreateMaybeMessage< ::HuobiProto::Depth >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Depth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::AggrTrade* Arena::CreateMaybeMessage< ::HuobiProto::AggrTrade >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::AggrTrade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Trade* Arena::CreateMaybeMessage< ::HuobiProto::Trade >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Trade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::ReqTrade_Tick* Arena::CreateMaybeMessage< ::HuobiProto::ReqTrade_Tick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::ReqTrade_Tick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::ReqTrade* Arena::CreateMaybeMessage< ::HuobiProto::ReqTrade >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::ReqTrade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::MarketSummary* Arena::CreateMaybeMessage< ::HuobiProto::MarketSummary >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::MarketSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Overview_Tick* Arena::CreateMaybeMessage< ::HuobiProto::Overview_Tick >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Overview_Tick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Overview* Arena::CreateMaybeMessage< ::HuobiProto::Overview >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Overview >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Ping* Arena::CreateMaybeMessage< ::HuobiProto::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::HuobiProto::Result* Arena::CreateMaybeMessage< ::HuobiProto::Result >(Arena* arena) {
  return Arena::CreateInternal< ::HuobiProto::Result >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
